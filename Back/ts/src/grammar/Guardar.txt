
%%

INIT
    : INSTRUCCION EOF{console.log("termine analizar, recursiva por la derecha c:"); return $1;}
;

INSTRUCCION
    : INSTRUCCION INSTRUCCIONES {$1.push($2); $$=$1;}
    |INSTRUCCIONES {$$=[$1];}
;

INSTRUCCIONES
    : WHILE             {$$=$1;}
    | DO_WHILE          {$$=$1;}
    | FOR               {$$=$1;}
    | IF                {$$=$1;}
    | ELSE_IF           {$$=$1;}
    | ELSE              {$$=$1;}
    | SWITCH            {$$=$1;}
    | PRINT             {$$=$1;}
    | PRINTLN           {$$=$1;}
    | METODO            {$$=$1;}
    | LLAMAR_METODO     {$$=$1;}
    | FUNCION           {$$=$1;}
    | LLAMAR_FUNCION    {$$=$1;}
    | PRIMITIVOS        {$$=$1;}
    | VECTORES          {$$=$1;}
    | BREAK             {$$=$1;}
    | CONTINUE          {$$=$1;}
    | RETURN            {$$=$1;}
;


RUN
    : 'run' 'ParentesisA' 'ParentesisC' 'PuntoComa'
;



FUNCION
    : 'id' 'ParentesisA' PARAMETROS 'ParentesisC' 'DosPuntos' TIPO_DATO 'LlaveA' INSTRUCCION 'LlaveC'
;

LLAMAR_FUNCION_METODO
    : 'id' 'ParentesisA' PARAMETROS 'ParentesisC'
;

METODO
    : 'id' 'ParentesisA' PARAMETROS 'ParentesisC' 'DosPuntos' 'void' 'LlaveA' INSTRUCCION 'LlaveC'
;



PARAMETROS
    : PARAMETROS 'coma' TIPO_DATO 'id'
    | TIPO_DATO 'id'
;


WHILE
    : 'while' 'ParentesisA' EXPRESION_B 'ParentesisC' 'LlaveA' INSTRUCCION 'LlaveC'
;

DO_WHILE
    :  'do' 'LlaveA' INSTRUCCION 'LlaveC' 'while' 'ParentesisA' EXPRESION_B 'ParentesisC'
;



FOR
    : 'for' 'ParentesisA' PRIMITIVOS CONDICION 'PuntoComa' ACTUALIZACION 'ParentesisC' 'LlaveA' INSTRUCCION 'LlaveC'
;


CONDICION
    :VALOR 'mayor' VALOR
    | VALOR 'menor' VALOR
    | VALOR 'mayorIgual' VALOR
    | VALOR 'menorIgual' VALOR
    | VALOR 'igualIf' VALOR
;






ROUND
    : 'round' 'ParentesisA' VALOR 'ParentesisC'
;



LENGTH
    : 'length' 'ParentesisA' VALOR 'ParentesisC'
;


TYPEOFF
    : 'typeof' 'ParentesisA' VALOR 'ParentesisC'
;

TO_STRING
    : 'ToString' 'ParentesisA' VALOR 'ParentesisC'
;


TOCHAR_ARRAY
    : 'char' 'CorcheteA' 'CorcheteC' 'id' 'igual' 'toCharArray' 'ParentesisA' VALOR 'ParentesisC'
;


TO_UPPER
    : 'toUpper' 'ParentesisA' EXPRESION_B 'ParentesisC'
;

TO_LOWER
    : 'toLower' 'ParentesisA' EXPRESION_B 'ParentesisC'
;


VALOR   
    :  POSICION_VECTOR
    |'True'
    |'False'
    |'id'
    |'entero'
    |'decimal'
    |'cadena'
    | TO_LOWER
    | TO_STRING
    | TO_UPPER
    | LENGTH
    | ROUND
    | TYPEOFF
    | LLAMAR_FUNCION_METODO
;


TIPO_DATO
    : 'int'
    |'double'
    |'char'
    |'String'
    |'boolean'
;

RETURN
    : 'return' EXPRESION_B 'PuntoComa'
    | 'return' 'PuntoComa'
;

BREAK
    : 'break' 'PuntoComa'
;

CONTINUE
    : 'continue' 'PuntoComa'
;




